# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from imm_server.models.base_model_ import Model
from imm_server import util


class ValueVsFreq(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, value: float=None, freq: float=None):  # noqa: E501
        """ValueVsFreq - a model defined in Swagger

        :param value: The value of this ValueVsFreq.  # noqa: E501
        :type value: float
        :param freq: The freq of this ValueVsFreq.  # noqa: E501
        :type freq: float
        """
        self.swagger_types = {
            'value': float,
            'freq': float
        }

        self.attribute_map = {
            'value': 'value',
            'freq': 'freq'
        }
        self._value = value
        self._freq = freq

    @classmethod
    def from_dict(cls, dikt) -> 'ValueVsFreq':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The value_vs_freq of this ValueVsFreq.  # noqa: E501
        :rtype: ValueVsFreq
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self) -> float:
        """Gets the value of this ValueVsFreq.


        :return: The value of this ValueVsFreq.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this ValueVsFreq.


        :param value: The value of this ValueVsFreq.
        :type value: float
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value

    @property
    def freq(self) -> float:
        """Gets the freq of this ValueVsFreq.


        :return: The freq of this ValueVsFreq.
        :rtype: float
        """
        return self._freq

    @freq.setter
    def freq(self, freq: float):
        """Sets the freq of this ValueVsFreq.


        :param freq: The freq of this ValueVsFreq.
        :type freq: float
        """
        if freq is None:
            raise ValueError("Invalid value for `freq`, must not be `None`")  # noqa: E501

        self._freq = freq
